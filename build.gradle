plugins {
    id 'java'
    id "org.shipkit.java"              version "2.2.6"
    id "com.diffplug.spotless" version "5.7.0"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

spotless {
    freshmark {
        target '*.md'
        propertiesFile('spotless.properties')
    }
}

subprojects { subproj ->
    apply plugin: 'java'
    apply plugin: 'com.diffplug.spotless'

    group 'com.tersesystems.blacklite'

    spotless {
        java {
            googleJavaFormat()
        }
    }

    dependencies {
        testImplementation 'org.apiguardian:apiguardian-api:1.1.0'
        testImplementation 'org.assertj:assertj-core:3.13.2'
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
        //testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.5.0'
    }

    test {
        useJUnitPlatform()
    }
}

// Go through all the artifacts and find javadoc for it...
static List<String> javadocFromDependencies(Configuration config) {
    List<String> javadocs = []
    config.dependencies.each { dep ->
        javadocs.add(artifactToJavadoc(dep.group, dep.name, dep.version))
    }
    javadocs
}

static String jvmToJavadoc(JavaVersion jvmVersion) {
    if (jvmVersion.java8) {
        'https://docs.oracle.com/javase/8/docs/api/'
    } else if (jvmVersion.java9) {
        'https://docs.oracle.com/javase/9/docs/api/'
    }else if (jvmVersion.java10) {
        'https://docs.oracle.com/javase/10/docs/api/'
    }else if (jvmVersion.java11) {
        'https://docs.oracle.com/en/java/javase/11/docs/api/'
    } else {
        'https://docs.oracle.com/javase/8/docs/api/'
    }
}

static String artifactToJavadoc(String organization, String name, String apiVersion) {
    String slashedOrg = organization.replace('.', '/')
    "https://oss.sonatype.org/service/local/repositories/releases/archive/$slashedOrg/$name/$apiVersion/$name-$apiVersion-javadoc.jar/!/"
}
